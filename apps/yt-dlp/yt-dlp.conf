# VERBOSITY AND SIMULATION OPTIONS
# https://github.com/yt-dlp/yt-dlp#verbosity-and-simulation-options

--verbose

# Show progress bars, even in quiet mode.
--progress
#--no-progress


# GENERAL OPTIONS
# https://github.com/yt-dlp/yt-dlp#general-options

--ignore-errors
#--no-ignore-errors


# WORKAROUNDS
# https://github.com/yt-dlp/yt-dlp#workarounds

# Number of seconds to sleep between requests during data extraction
--sleep-requests 2

# Number of seconds to sleep before each download. This is the minimum time to sleep when used along with --max-sleep-interval (Alias: --min-sleep-interval)
--min-sleep-interval 5

# Maximum number of seconds to sleep. Can only be used along with --min-sleep-interval
--max-sleep-interval 30

# *Jedi hand-wave* "I am Firefox..."
--user-agent "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:121.0) Gecko/20100101 Firefox/121.0"


# DOWNLOAD OPTIONS
# https://github.com/yt-dlp/yt-dlp#download-options

--concurrent-fragments 4

#--downloader aria2c
#--downloader-args "aria2c:--max-concurrent-downloads=4 --truncate-console-readout=false"

# Maximum download rate in bytes per second, e.g. 50K or 4.2M
--rate-limit 5M

# Minimum download rate in bytes per second below which throttling is assumed and the video data is re-extracted, e.g. 100K
--throttled-rate 100K

# Number of retries (default is 10), or "infinite"
--retries 3


# FILESYSTEM OPTIONS
# https://github.com/yt-dlp/yt-dlp#filesystem-options

# Do not use the Last-modified header to set the file modification time.
--no-mtime

# Do not resume partially downloaded fragments. If the file is not fragmented, restart download of the entire file
#--no-continue

# Do not overwrite any files
#--no-overwrites

#--cookies-from-browser firefox

# File containing URLs to download ("-" for stdin), one URL per line. Lines starting with "#", ";" or "]" are considered as comments and ignored
#--batch-file "_download.txt"


# VIDEO SELECTION
# https://github.com/yt-dlp/yt-dlp#video-selection

#--download-archive "_extra/_archive.log"

# Generic video filter. Any "OUTPUT TEMPLATE" field can be compared with a number or a string
# using the operators defined in "Filtering Formats". You can also simply specify a field to match
# if the field is present, use "!field" to check if the field is not present, and "&" to check
# multiple conditions. Use a "\" to escape "&" or quotes if needed. If used multiple times, the filter
# matches if atleast one of the conditions are met.
# E.g. --match-filter !is_live --match-filter "like_count>?100 & description~='(?i)\bcats \& dogs\b'"
# matches only videos that are not live OR those that have a like count more than 100
# (or the like field is not available) and also has a description that contains the phrase "cats & dogs"
# (caseless). Use "--match-filter -" to interactively ask whether to download each video
--match-filter "!is_live & !live"


# FORMAT SELECTION
# https://github.com/yt-dlp/yt-dlp#format-selection
# https://github.com/TheFrenchGhosty/TheFrenchGhostys-Ultimate-YouTube-DL-Scripts-Collection

--check-formats

--merge-output-format "mkv"
#--remux-video "mkv"

--format "(
	 bestvideo*[height=1440][fps>30]
	/bestvideo*[height>=1080][fps>30]
	/bestvideo*[height>=720][fps>30]

	/bestvideo*[height>=1440]
	/bestvideo*[height>=1080]
	/bestvideo*[height>=720]
	/bestvideo*
)+(bestaudio)/best"


# SUBTITLE OPTIONS
# https://github.com/yt-dlp/yt-dlp#subtitle-options

--sub-langs "en,en.*,-live_chat"

# Auto-generated subs are written to file (as of writing this comment, no way to automatically embed like true subs)
--write-auto-subs


# SPONSORBLOCK OPTIONS
# https://github.com/yt-dlp/yt-dlp#sponsorblock-options

#--sponsorblock-mark all

--sponsorblock-remove sponsor

#--no-sponsorblock


# POST-PROCESSING OPTIONS
# https://github.com/yt-dlp/yt-dlp#post-processing-options

--ffmpeg-location "$USERPROFILE/.yt-dlp/ffmpeg/bin"

--embed-thumbnail
--embed-metadata
--embed-chapters
--embed-subs

--parse-metadata "%(title)s:%(meta_title)s"

--parse-metadata "%(uploader,channel)s:%(meta_artist)s"

--parse-metadata "%(upload_date>%Y-%m-%d)s:%(meta_date)s"
--parse-metadata "%(upload_date>%Y)s:%(meta_year)s"

#--parse-metadata "%(series,playlist_title|)s:%(meta_show)s"

#--parse-metadata "%(episode_number,playlist_index|)d:%(meta_episode_sort)s"


# OUTPUT TEMPLATE
# https://github.com/yt-dlp/yt-dlp#output-template
# https://github.com/yt-dlp/yt-dlp#output-template-examples

--write-description
--write-info-json
--write-playlist-metafiles

# INDIVIDUAL VIDEOS
--output                    "%(title)s [%(id)s].%(ext)s"
--output "description:_extra/%(title)s [%(id)s]s"
--output    "infojson:_extra/%(title)s [%(id)s]s"

# WIP - PLAYLIST VIDEOS
#--output             "%(playlist_title&{} - |)s%(title)s [@%(playlist_uploader,channel,uploader,creator)s]%(playlist_id& [{}]|)s [%(id)s].%(ext)s"
#--output "description:%(playlist_title&{} - |)s%(title)s [@%(playlist_uploader,channel,uploader,creator)s]%(playlist_id& [{}]|)s [%(id)s]"
#--output    "infojson:%(playlist_title&{} - |)s%(title)s [@%(playlist_uploader,channel,uploader,creator)s]%(playlist_id& [{}]|)s [%(id)s]"

# WIP - PLAYLIST EXTRAS
#--output "pl_description:Channels/@%(uploader)s/_extra/_%(title)s [%(id)s]"
#--output    "pl_infojson:Channels/@%(uploader)s/_extra/_%(title)s [%(id)s]"
#--output   "pl_thumbnail:Channels/@%(uploader)s/_extra/_%(title)s [%(id)s]"

# TESTING
#--output "pl_description:%(title)s [@%(playlist_uploader,channel,uploader,creator)s] [%(playlist_id)s]"
#--output    "pl_infojson:%(title)s [@%(playlist_uploader,channel,uploader,creator)s] [%(playlist_id)s]"

# DO NOT USE THIS IN CONFIG FILES - ONLY IN BASH SCRIPTS.
# 2>&1 | tee "_config/output.log"
